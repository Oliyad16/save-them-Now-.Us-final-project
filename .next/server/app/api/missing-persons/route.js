"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/missing-persons/route";
exports.ids = ["app/api/missing-persons/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var E_Download_savethemnow_Jesus_src_app_api_missing_persons_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/missing-persons/route.ts */ \"(rsc)/./src/app/api/missing-persons/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/missing-persons/route\",\n        pathname: \"/api/missing-persons\",\n        filename: \"route\",\n        bundlePath: \"app/api/missing-persons/route\"\n    },\n    resolvedPagePath: \"E:\\\\Download\\\\savethemnow.Jesus\\\\src\\\\app\\\\api\\\\missing-persons\\\\route.ts\",\n    nextConfigOutput,\n    userland: E_Download_savethemnow_Jesus_src_app_api_missing_persons_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/missing-persons/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtaXNzaW5nLXBlcnNvbnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm1pc3NpbmctcGVyc29ucyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm1pc3NpbmctcGVyc29ucyUyRnJvdXRlLnRzJmFwcERpcj1FJTNBJTVDRG93bmxvYWQlNUNzYXZldGhlbW5vdy5KZXN1cyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RSUzQSU1Q0Rvd25sb2FkJTVDc2F2ZXRoZW1ub3cuSmVzdXMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3lCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2F2ZXRoZW1ub3ctamVzdXMvPzIzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRTpcXFxcRG93bmxvYWRcXFxcc2F2ZXRoZW1ub3cuSmVzdXNcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcbWlzc2luZy1wZXJzb25zXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9taXNzaW5nLXBlcnNvbnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9taXNzaW5nLXBlcnNvbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL21pc3NpbmctcGVyc29ucy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkU6XFxcXERvd25sb2FkXFxcXHNhdmV0aGVtbm93Lkplc3VzXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG1pc3NpbmctcGVyc29uc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbWlzc2luZy1wZXJzb25zL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/missing-persons/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/missing-persons/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_firestore_services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firestore/services */ \"(rsc)/./src/lib/firestore/services.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var csv_parse_sync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! csv-parse/sync */ \"(rsc)/./node_modules/csv-parse/lib/sync.js\");\n/* harmony import */ var _lib_geocoding__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/geocoding */ \"(rsc)/./src/lib/geocoding.ts\");\n\n\n\n\n\n\n// Cache for geocoded locations (fallback to CSV if Firestore is empty)\nlet geocacheData = {};\n// Flag to track if we should fall back to CSV\nlet useFirestore = true;\nfunction parseAgeToInt(ageText) {\n    if (!ageText) return undefined;\n    const digits = ageText.replace(/\\D/g, \"\");\n    try {\n        return digits ? parseInt(digits) : undefined;\n    } catch  {\n        return undefined;\n    }\n}\nfunction mapRowToMissingPerson(row, index) {\n    const caseNumber = (row[\"Case Number\"] || \"\").toString().trim().replace(/\"/g, \"\");\n    const dlc = (row[\"DLC\"] || \"\").toString().trim();\n    const firstName = (row[\"Legal First Name\"] || \"\").toString().trim();\n    const lastName = (row[\"Legal Last Name\"] || \"\").toString().trim();\n    const city = (row[\"City\"] || \"\").toString().trim();\n    const state = (row[\"State\"] || \"\").toString().trim();\n    const county = (row[\"County\"] || \"\").toString().trim();\n    const ageText = (row[\"Missing Age\"] || \"\").toString().trim();\n    const sex = (row[\"Biological Sex\"] || \"\").toString().trim();\n    const ethnicity = (row[\"Race / Ethnicity\"] || \"\").toString().trim();\n    const age = parseAgeToInt(ageText);\n    const category = age !== undefined && age < 18 ? \"Missing Children\" : \"Missing Adults\";\n    // Check geocache for coordinates\n    const cacheKey = `${city},${state}`.toLowerCase();\n    let latitude;\n    let longitude;\n    if (geocacheData[cacheKey]) {\n        latitude = geocacheData[cacheKey].lat;\n        longitude = geocacheData[cacheKey].lon;\n    }\n    const location = [\n        city,\n        county,\n        state,\n        \"USA\"\n    ].filter(Boolean).join(\", \");\n    const fullName = [\n        firstName,\n        lastName\n    ].filter(Boolean).join(\" \");\n    return {\n        id: index + 1,\n        name: fullName,\n        date: dlc,\n        status: \"Active\",\n        category,\n        reportedMissing: `Reported Missing ${dlc}`,\n        location,\n        latitude,\n        longitude,\n        age,\n        gender: sex,\n        ethnicity,\n        caseNumber,\n        description: `Case #${caseNumber} - ${ageText} ${sex} from ${city}, ${state}`\n    };\n}\nasync function getFromFirestore(request) {\n    try {\n        const searchParams = request.nextUrl.searchParams;\n        const limit = parseInt(searchParams.get(\"limit\") || \"100\");\n        const offset = parseInt(searchParams.get(\"offset\") || \"0\");\n        const category = searchParams.get(\"category\");\n        const search = searchParams.get(\"search\");\n        let result;\n        if (search) {\n            // Search functionality\n            const data = await _lib_firestore_services__WEBPACK_IMPORTED_MODULE_1__.missingPersonsService.search(search, {\n                limit,\n                offset\n            });\n            result = {\n                data: data.map((item)=>({\n                        id: item.id,\n                        name: item.name,\n                        date: item.dateMissing || item.dateReported,\n                        status: item.status,\n                        category: item.category,\n                        reportedMissing: `Reported Missing ${item.dateMissing || item.dateReported}`,\n                        location: item.location,\n                        latitude: item.latitude,\n                        longitude: item.longitude,\n                        age: item.age,\n                        gender: item.gender,\n                        ethnicity: item.ethnicity,\n                        caseNumber: item.caseNumber,\n                        description: item.description\n                    })),\n                meta: {\n                    total: data.length,\n                    limit,\n                    offset,\n                    hasMore: data.length === limit,\n                    source: \"firestore\"\n                }\n            };\n        } else if (category) {\n            // Category filtering\n            const data = await _lib_firestore_services__WEBPACK_IMPORTED_MODULE_1__.missingPersonsService.getByCategory(category, {\n                limit,\n                offset\n            });\n            result = {\n                data: data.map((item)=>({\n                        id: item.id,\n                        name: item.name,\n                        date: item.dateMissing || item.dateReported,\n                        status: item.status,\n                        category: item.category,\n                        reportedMissing: `Reported Missing ${item.dateMissing || item.dateReported}`,\n                        location: item.location,\n                        latitude: item.latitude,\n                        longitude: item.longitude,\n                        age: item.age,\n                        gender: item.gender,\n                        ethnicity: item.ethnicity,\n                        caseNumber: item.caseNumber,\n                        description: item.description\n                    })),\n                meta: {\n                    total: data.length,\n                    limit,\n                    offset,\n                    hasMore: data.length === limit,\n                    source: \"firestore\"\n                }\n            };\n        } else {\n            // Get all with pagination\n            const firestoreResult = await _lib_firestore_services__WEBPACK_IMPORTED_MODULE_1__.missingPersonsService.getAll({\n                limit,\n                offset\n            });\n            // Transform Firestore data to match expected MissingPerson interface\n            result = {\n                data: firestoreResult.data.map((item)=>({\n                        id: item.id,\n                        name: item.name,\n                        date: item.dateMissing || item.dateReported,\n                        status: item.status,\n                        category: item.category,\n                        reportedMissing: `Reported Missing ${item.dateMissing || item.dateReported}`,\n                        location: item.location,\n                        latitude: item.latitude,\n                        longitude: item.longitude,\n                        age: item.age,\n                        gender: item.gender,\n                        ethnicity: item.ethnicity,\n                        caseNumber: item.caseNumber,\n                        description: item.description\n                    })),\n                meta: {\n                    ...firestoreResult.meta,\n                    source: \"firestore\"\n                }\n            };\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n    } catch (error) {\n        console.error(\"Firestore error:\", error);\n        // Don't throw - let the main function handle fallback\n        throw new Error(`Firestore failed: ${error.message}`);\n    }\n}\nasync function getFromCSV(request) {\n    // Load geocache if not already loaded\n    if (Object.keys(geocacheData).length === 0) {\n        geocacheData = await (0,_lib_geocoding__WEBPACK_IMPORTED_MODULE_5__.loadGeocache)();\n    }\n    const csvPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"missing-persons.csv\");\n    // Check if file exists\n    try {\n        await fs__WEBPACK_IMPORTED_MODULE_2__.promises.access(csvPath);\n    } catch  {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"CSV file not found\"\n        }, {\n            status: 404\n        });\n    }\n    // Read and parse CSV\n    let csvContent = await fs__WEBPACK_IMPORTED_MODULE_2__.promises.readFile(csvPath, \"utf-8\");\n    // Remove BOM if present\n    if (csvContent.startsWith(\"\\uFEFF\")) {\n        csvContent = csvContent.slice(1);\n    }\n    const records = (0,csv_parse_sync__WEBPACK_IMPORTED_MODULE_4__.parse)(csvContent, {\n        columns: true,\n        skip_empty_lines: true,\n        trim: true\n    });\n    // Transform records to MissingPerson objects\n    const missingPersons = records.map((record, index)=>mapRowToMissingPerson(record, index));\n    // Apply pagination if requested\n    const searchParams = request.nextUrl.searchParams;\n    const limit = parseInt(searchParams.get(\"limit\") || \"100\");\n    const offset = parseInt(searchParams.get(\"offset\") || \"0\");\n    const paginatedResults = missingPersons.slice(offset, offset + limit);\n    // Add metadata about the full dataset\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        data: paginatedResults,\n        meta: {\n            total: missingPersons.length,\n            limit,\n            offset,\n            hasMore: offset + limit < missingPersons.length,\n            source: \"csv_fallback\"\n        }\n    });\n}\nasync function GET(request) {\n    try {\n        // Try Firestore first if enabled\n        if (useFirestore) {\n            try {\n                console.log(\"Attempting to fetch from Firestore...\");\n                return await getFromFirestore(request);\n            } catch (error) {\n                console.warn(\"Firestore failed, falling back to CSV:\", error.message);\n                // Disable Firestore for this session if it fails\n                useFirestore = false;\n            }\n        }\n        // Fallback to CSV\n        console.log(\"Using CSV fallback...\");\n        return await getFromCSV(request);\n    } catch (error) {\n        console.error(\"Error processing missing persons request:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch missing persons data\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n// POST method for creating new missing person records (admin only)\nasync function POST(request) {\n    try {\n        // TODO: Add authentication check here\n        const body = await request.json();\n        if (!useFirestore) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"POST functionality requires Firestore to be available\"\n            }, {\n                status: 503\n            });\n        }\n        const result = await _lib_firestore_services__WEBPACK_IMPORTED_MODULE_1__.missingPersonsService.create({\n            caseNumber: body.caseNumber,\n            name: body.name,\n            age: body.age,\n            gender: body.gender,\n            ethnicity: body.ethnicity,\n            city: body.city,\n            county: body.county,\n            state: body.state,\n            location: body.location,\n            latitude: body.latitude,\n            longitude: body.longitude,\n            dateMissing: body.dateMissing,\n            dateReported: body.dateReported || body.dateMissing,\n            status: body.status || \"Active\",\n            category: body.category || (body.age && body.age < 18 ? \"Missing Children\" : \"Missing Adults\"),\n            description: body.description,\n            source: \"api_create\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Error creating missing person:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to create missing person\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/missing-persons/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/firebase/config.ts":
/*!************************************!*\
  !*** ./src/lib/firebase/config.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   storage: () => (/* binding */ storage)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(rsc)/./node_modules/firebase/app/dist/index.mjs\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(rsc)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/storage */ \"(rsc)/./node_modules/firebase/storage/dist/index.mjs\");\n\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCexq5vJYj21qFB1kjx1pljBZ5SIWsRKCk\",\n    authDomain: \"save-them-now.firebaseapp.com\",\n    projectId: \"save-them-now\",\n    storageBucket: \"save-them-now.firebasestorage.app\",\n    messagingSenderId: \"1013206442264\",\n    appId: \"1:1013206442264:web:48ff46395a1bed12f93e6d\",\n    measurementId: \"G-NSN8EJ2869\"\n};\n// Check if Firebase config is valid\nfunction isFirebaseConfigValid() {\n    return !!(firebaseConfig.apiKey && firebaseConfig.authDomain && firebaseConfig.projectId && firebaseConfig.apiKey !== \"your-firebase-api-key\" // Check for placeholder\n    );\n}\nlet app = null;\nlet db = null;\nlet auth = null;\nlet storage = null;\n// Initialize Firebase only if config is valid\nif (isFirebaseConfigValid()) {\n    try {\n        app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length === 0 ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\n        db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\n        auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\n        storage = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_3__.getStorage)(app);\n        console.log(\"Firebase initialized successfully\");\n    } catch (error) {\n        console.warn(\"Firebase initialization failed:\", error);\n        app = null;\n        db = null;\n        auth = null;\n        storage = null;\n    }\n} else {\n    console.warn(\"Firebase config is invalid or incomplete, skipping initialization\");\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2ZpcmViYXNlL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFxRDtBQUNKO0FBQ1Y7QUFDTTtBQUU3QyxNQUFNSyxpQkFBaUI7SUFDckJDLFFBQVFDLHlDQUF3QztJQUNoREcsWUFBWUgsK0JBQTRDO0lBQ3hESyxXQUFXTCxlQUEyQztJQUN0RE8sZUFBZVAsbUNBQStDO0lBQzlEUyxtQkFBbUJULGVBQW9EO0lBQ3ZFVyxPQUFPWCw0Q0FBdUM7SUFDOUNhLGVBQWViLGNBQStDO0FBQ2hFO0FBRUEsb0NBQW9DO0FBQ3BDLFNBQVNlO0lBQ1AsT0FBTyxDQUFDLENBQ05qQixDQUFBQSxlQUFlQyxNQUFNLElBQ3JCRCxlQUFlSyxVQUFVLElBQ3pCTCxlQUFlTyxTQUFTLElBQ3hCUCxlQUFlQyxNQUFNLEtBQUssd0JBQXdCLHdCQUF3QjtJQUExQjtBQUVwRDtBQUVBLElBQUlpQixNQUFXO0FBQ2YsSUFBSUMsS0FBVTtBQUNkLElBQUlDLE9BQVk7QUFDaEIsSUFBSUMsVUFBZTtBQUVuQiw4Q0FBOEM7QUFDOUMsSUFBSUoseUJBQXlCO0lBQzNCLElBQUk7UUFDRkMsTUFBTXRCLHFEQUFPQSxHQUFHMEIsTUFBTSxLQUFLLElBQUkzQiwyREFBYUEsQ0FBQ0ssa0JBQWtCSixxREFBT0EsRUFBRSxDQUFDLEVBQUU7UUFDM0V1QixLQUFLdEIsZ0VBQVlBLENBQUNxQjtRQUNsQkUsT0FBT3RCLHNEQUFPQSxDQUFDb0I7UUFDZkcsVUFBVXRCLDREQUFVQSxDQUFDbUI7UUFDckJLLFFBQVFDLEdBQUcsQ0FBQztJQUNkLEVBQUUsT0FBT0MsT0FBTztRQUNkRixRQUFRRyxJQUFJLENBQUMsbUNBQW1DRDtRQUNoRFAsTUFBTTtRQUNOQyxLQUFLO1FBQ0xDLE9BQU87UUFDUEMsVUFBVTtJQUNaO0FBQ0YsT0FBTztJQUNMRSxRQUFRRyxJQUFJLENBQUM7QUFDZjtBQUU0QjtBQUM1QixpRUFBZVIsR0FBR0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhdmV0aGVtbm93LWplc3VzLy4vc3JjL2xpYi9maXJlYmFzZS9jb25maWcudHM/NzdjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQXBwLCBnZXRBcHBzIH0gZnJvbSAnZmlyZWJhc2UvYXBwJ1xyXG5pbXBvcnQgeyBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnXHJcbmltcG9ydCB7IGdldEF1dGggfSBmcm9tICdmaXJlYmFzZS9hdXRoJ1xyXG5pbXBvcnQgeyBnZXRTdG9yYWdlIH0gZnJvbSAnZmlyZWJhc2Uvc3RvcmFnZSdcclxuXHJcbmNvbnN0IGZpcmViYXNlQ29uZmlnID0ge1xyXG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBJX0tFWSxcclxuICBhdXRoRG9tYWluOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BVVRIX0RPTUFJTixcclxuICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQsXHJcbiAgc3RvcmFnZUJ1Y2tldDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQsXHJcbiAgbWVzc2FnaW5nU2VuZGVySWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FU1NBR0lOR19TRU5ERVJfSUQsXHJcbiAgYXBwSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCxcclxuICBtZWFzdXJlbWVudElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRUFTVVJFTUVOVF9JRFxyXG59XHJcblxyXG4vLyBDaGVjayBpZiBGaXJlYmFzZSBjb25maWcgaXMgdmFsaWRcclxuZnVuY3Rpb24gaXNGaXJlYmFzZUNvbmZpZ1ZhbGlkKCkge1xyXG4gIHJldHVybiAhIShcclxuICAgIGZpcmViYXNlQ29uZmlnLmFwaUtleSAmJiBcclxuICAgIGZpcmViYXNlQ29uZmlnLmF1dGhEb21haW4gJiYgXHJcbiAgICBmaXJlYmFzZUNvbmZpZy5wcm9qZWN0SWQgJiZcclxuICAgIGZpcmViYXNlQ29uZmlnLmFwaUtleSAhPT0gJ3lvdXItZmlyZWJhc2UtYXBpLWtleScgLy8gQ2hlY2sgZm9yIHBsYWNlaG9sZGVyXHJcbiAgKVxyXG59XHJcblxyXG5sZXQgYXBwOiBhbnkgPSBudWxsXHJcbmxldCBkYjogYW55ID0gbnVsbFxyXG5sZXQgYXV0aDogYW55ID0gbnVsbFxyXG5sZXQgc3RvcmFnZTogYW55ID0gbnVsbFxyXG5cclxuLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZSBvbmx5IGlmIGNvbmZpZyBpcyB2YWxpZFxyXG5pZiAoaXNGaXJlYmFzZUNvbmZpZ1ZhbGlkKCkpIHtcclxuICB0cnkge1xyXG4gICAgYXBwID0gZ2V0QXBwcygpLmxlbmd0aCA9PT0gMCA/IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpIDogZ2V0QXBwcygpWzBdXHJcbiAgICBkYiA9IGdldEZpcmVzdG9yZShhcHApXHJcbiAgICBhdXRoID0gZ2V0QXV0aChhcHApXHJcbiAgICBzdG9yYWdlID0gZ2V0U3RvcmFnZShhcHApXHJcbiAgICBjb25zb2xlLmxvZygnRmlyZWJhc2UgaW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5JylcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS53YXJuKCdGaXJlYmFzZSBpbml0aWFsaXphdGlvbiBmYWlsZWQ6JywgZXJyb3IpXHJcbiAgICBhcHAgPSBudWxsXHJcbiAgICBkYiA9IG51bGxcclxuICAgIGF1dGggPSBudWxsXHJcbiAgICBzdG9yYWdlID0gbnVsbFxyXG4gIH1cclxufSBlbHNlIHtcclxuICBjb25zb2xlLndhcm4oJ0ZpcmViYXNlIGNvbmZpZyBpcyBpbnZhbGlkIG9yIGluY29tcGxldGUsIHNraXBwaW5nIGluaXRpYWxpemF0aW9uJylcclxufVxyXG5cclxuZXhwb3J0IHsgZGIsIGF1dGgsIHN0b3JhZ2UgfVxyXG5leHBvcnQgZGVmYXVsdCBhcHAiXSwibmFtZXMiOlsiaW5pdGlhbGl6ZUFwcCIsImdldEFwcHMiLCJnZXRGaXJlc3RvcmUiLCJnZXRBdXRoIiwiZ2V0U3RvcmFnZSIsImZpcmViYXNlQ29uZmlnIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkiLCJhdXRoRG9tYWluIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4iLCJwcm9qZWN0SWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEIiwic3RvcmFnZUJ1Y2tldCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUIiwibWVzc2FnaW5nU2VuZGVySWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEIiwiYXBwSWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQiLCJtZWFzdXJlbWVudElkIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVBU1VSRU1FTlRfSUQiLCJpc0ZpcmViYXNlQ29uZmlnVmFsaWQiLCJhcHAiLCJkYiIsImF1dGgiLCJzdG9yYWdlIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/firebase/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/firestore/services.ts":
/*!***************************************!*\
  !*** ./src/lib/firestore/services.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DonationsService: () => (/* binding */ DonationsService),\n/* harmony export */   MissingPersonsService: () => (/* binding */ MissingPersonsService),\n/* harmony export */   SubscriptionsService: () => (/* binding */ SubscriptionsService),\n/* harmony export */   UsersService: () => (/* binding */ UsersService),\n/* harmony export */   donationsService: () => (/* binding */ donationsService),\n/* harmony export */   missingPersonsService: () => (/* binding */ missingPersonsService),\n/* harmony export */   subscriptionsService: () => (/* binding */ subscriptionsService),\n/* harmony export */   usersService: () => (/* binding */ usersService)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var _lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firebase/config */ \"(rsc)/./src/lib/firebase/config.ts\");\n\n\n// Helper function to check if Firestore is available\nfunction isFirestoreAvailable() {\n    return _lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db !== null && _lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db !== undefined;\n}\n/**\r\n * Missing Persons Service\r\n */ class MissingPersonsService {\n    async getAll(options = {}) {\n        if (!isFirestoreAvailable()) {\n            throw new Error(\"Firestore is not available\");\n        }\n        const { limit: pageLimit = 100, offset = 0 } = options;\n        try {\n            let q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"dateMissing\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit));\n            // Handle offset-based pagination\n            if (offset > 0) {\n                const offsetDocs = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"dateMissing\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(offset)));\n                if (offsetDocs.docs.length > 0) {\n                    const lastVisible = offsetDocs.docs[offsetDocs.docs.length - 1];\n                    q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"dateMissing\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.startAfter)(lastVisible), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit));\n                }\n            }\n            const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const data = snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            return {\n                data,\n                meta: {\n                    total: data.length,\n                    limit: pageLimit,\n                    offset,\n                    hasMore: data.length === pageLimit\n                }\n            };\n        } catch (error) {\n            console.error(\"Error fetching missing persons:\", error);\n            throw new Error(\"Failed to fetch missing persons\");\n        }\n    }\n    async search(searchTerm, options = {}) {\n        if (!isFirestoreAvailable()) {\n            throw new Error(\"Firestore is not available\");\n        }\n        const { limit: pageLimit = 50 } = options;\n        try {\n            // Create multiple search queries\n            const queries = [\n                // Search by name\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"searchable.name\", \">=\", searchTerm.toLowerCase()), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"searchable.name\", \"<=\", searchTerm.toLowerCase() + \"\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit)),\n                // Search by city\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"searchable.city\", \">=\", searchTerm.toLowerCase()), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"searchable.city\", \"<=\", searchTerm.toLowerCase() + \"\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit)),\n                // Search by case number\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"searchable.caseNumber\", \">=\", searchTerm.toLowerCase()), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"searchable.caseNumber\", \"<=\", searchTerm.toLowerCase() + \"\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit))\n            ];\n            const results = await Promise.all(queries.map((q)=>(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q)));\n            const allDocs = new Map();\n            // Combine results and remove duplicates\n            results.forEach((snapshot)=>{\n                snapshot.docs.forEach((doc)=>{\n                    allDocs.set(doc.id, {\n                        id: doc.id,\n                        ...doc.data()\n                    });\n                });\n            });\n            return Array.from(allDocs.values()).slice(0, pageLimit);\n        } catch (error) {\n            console.error(\"Error searching missing persons:\", error);\n            throw new Error(\"Failed to search missing persons\");\n        }\n    }\n    async getByCategory(category, options = {}) {\n        if (!isFirestoreAvailable()) {\n            throw new Error(\"Firestore is not available\");\n        }\n        const { limit: pageLimit = 100 } = options;\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"category\", \"==\", category), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"dateMissing\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit));\n            const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            return snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n        } catch (error) {\n            console.error(\"Error fetching by category:\", error);\n            throw new Error(\"Failed to fetch missing persons by category\");\n        }\n    }\n    async create(data) {\n        if (!isFirestoreAvailable()) {\n            throw new Error(\"Firestore is not available\");\n        }\n        try {\n            // Add searchable fields\n            const searchableData = {\n                ...data,\n                searchable: {\n                    name: (data.name || \"\").toLowerCase(),\n                    city: (data.city || \"\").toLowerCase(),\n                    state: (data.state || \"\").toLowerCase(),\n                    caseNumber: (data.caseNumber || \"\").toLowerCase()\n                },\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), searchableData);\n            return {\n                id: docRef.id,\n                ...searchableData\n            };\n        } catch (error) {\n            console.error(\"Error creating missing person:\", error);\n            throw new Error(\"Failed to create missing person\");\n        }\n    }\n    async update(id, data) {\n        try {\n            const updateData = {\n                ...data,\n                updatedAt: new Date()\n            };\n            // Update searchable fields if relevant data changed\n            if (data.name || data.city || data.state || data.caseNumber) {\n                updateData.searchable = {\n                    name: (data.name || \"\").toLowerCase(),\n                    city: (data.city || \"\").toLowerCase(),\n                    state: (data.state || \"\").toLowerCase(),\n                    caseNumber: (data.caseNumber || \"\").toLowerCase()\n                };\n            }\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName, id), updateData);\n            return {\n                id,\n                ...updateData\n            };\n        } catch (error) {\n            console.error(\"Error updating missing person:\", error);\n            throw new Error(\"Failed to update missing person\");\n        }\n    }\n    constructor(){\n        this.collectionName = \"missing_persons\";\n    }\n}\n/**\r\n * Users Service\r\n */ class UsersService {\n    async getByEmail(email) {\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"email\", \"==\", email));\n            const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (snapshot.empty) {\n                return null;\n            }\n            const doc = snapshot.docs[0];\n            return {\n                id: doc.id,\n                ...doc.data()\n            };\n        } catch (error) {\n            console.error(\"Error fetching user by email:\", error);\n            throw new Error(\"Failed to fetch user\");\n        }\n    }\n    async create(data) {\n        try {\n            const userData = {\n                ...data,\n                tier: data.tier || \"free\",\n                emailVerified: data.emailVerified || false,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), userData);\n            return {\n                id: docRef.id,\n                ...userData\n            };\n        } catch (error) {\n            console.error(\"Error creating user:\", error);\n            throw new Error(\"Failed to create user\");\n        }\n    }\n    async update(id, data) {\n        try {\n            const updateData = {\n                ...data,\n                updatedAt: new Date()\n            };\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName, id), updateData);\n            return {\n                id,\n                ...updateData\n            };\n        } catch (error) {\n            console.error(\"Error updating user:\", error);\n            throw new Error(\"Failed to update user\");\n        }\n    }\n    constructor(){\n        this.collectionName = \"users\";\n    }\n}\n/**\r\n * Donations Service\r\n */ class DonationsService {\n    async getByUserId(userId, options = {}) {\n        const { limit: pageLimit = 10, offset = 0 } = options;\n        try {\n            let q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"userId\", \"==\", userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit));\n            if (offset > 0) {\n                const offsetDocs = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"userId\", \"==\", userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(offset)));\n                if (offsetDocs.docs.length > 0) {\n                    const lastVisible = offsetDocs.docs[offsetDocs.docs.length - 1];\n                    q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"userId\", \"==\", userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.startAfter)(lastVisible), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(pageLimit));\n                }\n            }\n            const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const donations = snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            // Get totals\n            const allUserDonations = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"userId\", \"==\", userId)));\n            const totalAmount = allUserDonations.docs.reduce((sum, doc)=>{\n                return sum + (doc.data().amount || 0);\n            }, 0);\n            return {\n                donations,\n                pagination: {\n                    limit: pageLimit,\n                    offset,\n                    total: allUserDonations.size\n                },\n                summary: {\n                    totalDonated: totalAmount,\n                    totalDonations: allUserDonations.size\n                }\n            };\n        } catch (error) {\n            console.error(\"Error fetching donations:\", error);\n            throw new Error(\"Failed to fetch donations\");\n        }\n    }\n    async create(data) {\n        try {\n            const donationData = {\n                ...data,\n                currency: data.currency || \"usd\",\n                createdAt: new Date()\n            };\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), donationData);\n            return {\n                id: docRef.id,\n                ...donationData\n            };\n        } catch (error) {\n            console.error(\"Error creating donation:\", error);\n            throw new Error(\"Failed to create donation\");\n        }\n    }\n    constructor(){\n        this.collectionName = \"donations\";\n    }\n}\n/**\r\n * Subscriptions Service\r\n */ class SubscriptionsService {\n    async getActiveByUserId(userId) {\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"userId\", \"==\", userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"status\", \"==\", \"active\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(1));\n            const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (snapshot.empty) {\n                return null;\n            }\n            const doc = snapshot.docs[0];\n            return {\n                id: doc.id,\n                ...doc.data()\n            };\n        } catch (error) {\n            console.error(\"Error fetching subscription:\", error);\n            throw new Error(\"Failed to fetch subscription\");\n        }\n    }\n    async create(data) {\n        try {\n            const subscriptionData = {\n                ...data,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            };\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), subscriptionData);\n            return {\n                id: docRef.id,\n                ...subscriptionData\n            };\n        } catch (error) {\n            console.error(\"Error creating subscription:\", error);\n            throw new Error(\"Failed to create subscription\");\n        }\n    }\n    async update(id, data) {\n        try {\n            const updateData = {\n                ...data,\n                updatedAt: new Date()\n            };\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName, id), updateData);\n            return {\n                id,\n                ...updateData\n            };\n        } catch (error) {\n            console.error(\"Error updating subscription:\", error);\n            throw new Error(\"Failed to update subscription\");\n        }\n    }\n    async updateByStripeId(stripeSubscriptionId, data) {\n        try {\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_lib_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"stripeSubscriptionId\", \"==\", stripeSubscriptionId));\n            const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            if (snapshot.empty) {\n                throw new Error(\"Subscription not found\");\n            }\n            const subscriptionDoc = snapshot.docs[0];\n            await this.update(subscriptionDoc.id, data);\n            return {\n                id: subscriptionDoc.id,\n                ...data\n            };\n        } catch (error) {\n            console.error(\"Error updating subscription by Stripe ID:\", error);\n            throw new Error(\"Failed to update subscription\");\n        }\n    }\n    constructor(){\n        this.collectionName = \"subscriptions\";\n    }\n}\n// Export service instances\nconst missingPersonsService = new MissingPersonsService();\nconst usersService = new UsersService();\nconst donationsService = new DonationsService();\nconst subscriptionsService = new SubscriptionsService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/firestore/services.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/geocoding.ts":
/*!******************************!*\
  !*** ./src/lib/geocoding.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   geocodeLocation: () => (/* binding */ geocodeLocation),\n/* harmony export */   getCachedOrGeocodeLocation: () => (/* binding */ getCachedOrGeocodeLocation),\n/* harmony export */   loadGeocache: () => (/* binding */ loadGeocache),\n/* harmony export */   saveGeocache: () => (/* binding */ saveGeocache)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst GEOCACHE_PATH = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"geocache.json\");\nasync function loadGeocache() {\n    try {\n        const data = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(GEOCACHE_PATH, \"utf-8\");\n        return JSON.parse(data);\n    } catch (error) {\n        return {};\n    }\n}\nasync function saveGeocache(cache) {\n    try {\n        await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(GEOCACHE_PATH, JSON.stringify(cache, null, 2), \"utf-8\");\n    } catch (error) {\n        console.error(\"Failed to save geocache:\", error);\n    }\n}\nasync function geocodeLocation(city, state) {\n    try {\n        const query = encodeURIComponent(`${city}, ${state}, USA`);\n        const url = `https://nominatim.openstreetmap.org/search?q=${query}&format=json&limit=1`;\n        const response = await fetch(url, {\n            headers: {\n                \"User-Agent\": \"SaveThemNow.Jesus/1.0 (missing-persons-awareness)\"\n            }\n        });\n        if (!response.ok) {\n            return null;\n        }\n        const data = await response.json();\n        if (data && data.length > 0) {\n            return {\n                lat: parseFloat(data[0].lat),\n                lon: parseFloat(data[0].lon)\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Geocoding error:\", error);\n        return null;\n    }\n}\nasync function getCachedOrGeocodeLocation(city, state) {\n    if (!city || !state) return null;\n    const cache = await loadGeocache();\n    const cacheKey = `${city},${state}`.toLowerCase();\n    // Return cached result if available\n    if (cache[cacheKey]) {\n        return {\n            lat: cache[cacheKey].lat,\n            lon: cache[cacheKey].lon\n        };\n    }\n    // Geocode and cache the result\n    const coords = await geocodeLocation(city, state);\n    if (coords) {\n        cache[cacheKey] = {\n            ...coords,\n            timestamp: Date.now()\n        };\n        await saveGeocache(cache);\n    }\n    return coords;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2dlb2NvZGluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtQztBQUNaO0FBVXZCLE1BQU1HLGdCQUFnQkQsZ0RBQVMsQ0FBQ0csUUFBUUMsR0FBRyxJQUFJO0FBRXhDLGVBQWVDO0lBQ3BCLElBQUk7UUFDRixNQUFNQyxPQUFPLE1BQU1QLHdDQUFFQSxDQUFDUSxRQUFRLENBQUNOLGVBQWU7UUFDOUMsT0FBT08sS0FBS0MsS0FBSyxDQUFDSDtJQUNwQixFQUFFLE9BQU9JLE9BQU87UUFDZCxPQUFPLENBQUM7SUFDVjtBQUNGO0FBRU8sZUFBZUMsYUFBYUMsS0FBZTtJQUNoRCxJQUFJO1FBQ0YsTUFBTWIsd0NBQUVBLENBQUNjLFNBQVMsQ0FBQ1osZUFBZU8sS0FBS00sU0FBUyxDQUFDRixPQUFPLE1BQU0sSUFBSTtJQUNwRSxFQUFFLE9BQU9GLE9BQU87UUFDZEssUUFBUUwsS0FBSyxDQUFDLDRCQUE0QkE7SUFDNUM7QUFDRjtBQUVPLGVBQWVNLGdCQUFnQkMsSUFBWSxFQUFFQyxLQUFhO0lBQy9ELElBQUk7UUFDRixNQUFNQyxRQUFRQyxtQkFBbUIsQ0FBQyxFQUFFSCxLQUFLLEVBQUUsRUFBRUMsTUFBTSxLQUFLLENBQUM7UUFDekQsTUFBTUcsTUFBTSxDQUFDLDZDQUE2QyxFQUFFRixNQUFNLG9CQUFvQixDQUFDO1FBRXZGLE1BQU1HLFdBQVcsTUFBTUMsTUFBTUYsS0FBSztZQUNoQ0csU0FBUztnQkFDUCxjQUFjO1lBQ2hCO1FBQ0Y7UUFFQSxJQUFJLENBQUNGLFNBQVNHLEVBQUUsRUFBRTtZQUNoQixPQUFPO1FBQ1Q7UUFFQSxNQUFNbkIsT0FBTyxNQUFNZ0IsU0FBU0ksSUFBSTtRQUVoQyxJQUFJcEIsUUFBUUEsS0FBS3FCLE1BQU0sR0FBRyxHQUFHO1lBQzNCLE9BQU87Z0JBQ0xDLEtBQUtDLFdBQVd2QixJQUFJLENBQUMsRUFBRSxDQUFDc0IsR0FBRztnQkFDM0JFLEtBQUtELFdBQVd2QixJQUFJLENBQUMsRUFBRSxDQUFDd0IsR0FBRztZQUM3QjtRQUNGO1FBRUEsT0FBTztJQUNULEVBQUUsT0FBT3BCLE9BQU87UUFDZEssUUFBUUwsS0FBSyxDQUFDLG9CQUFvQkE7UUFDbEMsT0FBTztJQUNUO0FBQ0Y7QUFFTyxlQUFlcUIsMkJBQTJCZCxJQUFZLEVBQUVDLEtBQWE7SUFDMUUsSUFBSSxDQUFDRCxRQUFRLENBQUNDLE9BQU8sT0FBTztJQUU1QixNQUFNTixRQUFRLE1BQU1QO0lBQ3BCLE1BQU0yQixXQUFXLENBQUMsRUFBRWYsS0FBSyxDQUFDLEVBQUVDLE1BQU0sQ0FBQyxDQUFDZSxXQUFXO0lBRS9DLG9DQUFvQztJQUNwQyxJQUFJckIsS0FBSyxDQUFDb0IsU0FBUyxFQUFFO1FBQ25CLE9BQU87WUFDTEosS0FBS2hCLEtBQUssQ0FBQ29CLFNBQVMsQ0FBQ0osR0FBRztZQUN4QkUsS0FBS2xCLEtBQUssQ0FBQ29CLFNBQVMsQ0FBQ0YsR0FBRztRQUMxQjtJQUNGO0lBRUEsK0JBQStCO0lBQy9CLE1BQU1JLFNBQVMsTUFBTWxCLGdCQUFnQkMsTUFBTUM7SUFDM0MsSUFBSWdCLFFBQVE7UUFDVnRCLEtBQUssQ0FBQ29CLFNBQVMsR0FBRztZQUNoQixHQUFHRSxNQUFNO1lBQ1RDLFdBQVdDLEtBQUtDLEdBQUc7UUFDckI7UUFDQSxNQUFNMUIsYUFBYUM7SUFDckI7SUFFQSxPQUFPc0I7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhdmV0aGVtbm93LWplc3VzLy4vc3JjL2xpYi9nZW9jb2RpbmcudHM/YTg5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9taXNlcyBhcyBmcyB9IGZyb20gJ2ZzJ1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcblxuZXhwb3J0IGludGVyZmFjZSBHZW9jYWNoZUVudHJ5IHtcbiAgbGF0OiBudW1iZXJcbiAgbG9uOiBudW1iZXJcbiAgdGltZXN0YW1wPzogbnVtYmVyXG59XG5cbmV4cG9ydCB0eXBlIEdlb2NhY2hlID0gUmVjb3JkPHN0cmluZywgR2VvY2FjaGVFbnRyeT5cblxuY29uc3QgR0VPQ0FDSEVfUEFUSCA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnZ2VvY2FjaGUuanNvbicpXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkR2VvY2FjaGUoKTogUHJvbWlzZTxHZW9jYWNoZT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBmcy5yZWFkRmlsZShHRU9DQUNIRV9QQVRILCAndXRmLTgnKVxuICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHt9XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhdmVHZW9jYWNoZShjYWNoZTogR2VvY2FjaGUpOiBQcm9taXNlPHZvaWQ+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBmcy53cml0ZUZpbGUoR0VPQ0FDSEVfUEFUSCwgSlNPTi5zdHJpbmdpZnkoY2FjaGUsIG51bGwsIDIpLCAndXRmLTgnKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzYXZlIGdlb2NhY2hlOicsIGVycm9yKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW9jb2RlTG9jYXRpb24oY2l0eTogc3RyaW5nLCBzdGF0ZTogc3RyaW5nKTogUHJvbWlzZTx7IGxhdDogbnVtYmVyOyBsb246IG51bWJlciB9IHwgbnVsbD4ge1xuICB0cnkge1xuICAgIGNvbnN0IHF1ZXJ5ID0gZW5jb2RlVVJJQ29tcG9uZW50KGAke2NpdHl9LCAke3N0YXRlfSwgVVNBYClcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9ub21pbmF0aW0ub3BlbnN0cmVldG1hcC5vcmcvc2VhcmNoP3E9JHtxdWVyeX0mZm9ybWF0PWpzb24mbGltaXQ9MWBcbiAgICBcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnVXNlci1BZ2VudCc6ICdTYXZlVGhlbU5vdy5KZXN1cy8xLjAgKG1pc3NpbmctcGVyc29ucy1hd2FyZW5lc3MpJ1xuICAgICAgfVxuICAgIH0pXG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICBcbiAgICBpZiAoZGF0YSAmJiBkYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxhdDogcGFyc2VGbG9hdChkYXRhWzBdLmxhdCksXG4gICAgICAgIGxvbjogcGFyc2VGbG9hdChkYXRhWzBdLmxvbilcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0dlb2NvZGluZyBlcnJvcjonLCBlcnJvcilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDYWNoZWRPckdlb2NvZGVMb2NhdGlvbihjaXR5OiBzdHJpbmcsIHN0YXRlOiBzdHJpbmcpOiBQcm9taXNlPHsgbGF0OiBudW1iZXI7IGxvbjogbnVtYmVyIH0gfCBudWxsPiB7XG4gIGlmICghY2l0eSB8fCAhc3RhdGUpIHJldHVybiBudWxsXG4gIFxuICBjb25zdCBjYWNoZSA9IGF3YWl0IGxvYWRHZW9jYWNoZSgpXG4gIGNvbnN0IGNhY2hlS2V5ID0gYCR7Y2l0eX0sJHtzdGF0ZX1gLnRvTG93ZXJDYXNlKClcbiAgXG4gIC8vIFJldHVybiBjYWNoZWQgcmVzdWx0IGlmIGF2YWlsYWJsZVxuICBpZiAoY2FjaGVbY2FjaGVLZXldKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxhdDogY2FjaGVbY2FjaGVLZXldLmxhdCxcbiAgICAgIGxvbjogY2FjaGVbY2FjaGVLZXldLmxvblxuICAgIH1cbiAgfVxuICBcbiAgLy8gR2VvY29kZSBhbmQgY2FjaGUgdGhlIHJlc3VsdFxuICBjb25zdCBjb29yZHMgPSBhd2FpdCBnZW9jb2RlTG9jYXRpb24oY2l0eSwgc3RhdGUpXG4gIGlmIChjb29yZHMpIHtcbiAgICBjYWNoZVtjYWNoZUtleV0gPSB7XG4gICAgICAuLi5jb29yZHMsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KClcbiAgICB9XG4gICAgYXdhaXQgc2F2ZUdlb2NhY2hlKGNhY2hlKVxuICB9XG4gIFxuICByZXR1cm4gY29vcmRzXG59Il0sIm5hbWVzIjpbInByb21pc2VzIiwiZnMiLCJwYXRoIiwiR0VPQ0FDSEVfUEFUSCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwibG9hZEdlb2NhY2hlIiwiZGF0YSIsInJlYWRGaWxlIiwiSlNPTiIsInBhcnNlIiwiZXJyb3IiLCJzYXZlR2VvY2FjaGUiLCJjYWNoZSIsIndyaXRlRmlsZSIsInN0cmluZ2lmeSIsImNvbnNvbGUiLCJnZW9jb2RlTG9jYXRpb24iLCJjaXR5Iiwic3RhdGUiLCJxdWVyeSIsImVuY29kZVVSSUNvbXBvbmVudCIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJoZWFkZXJzIiwib2siLCJqc29uIiwibGVuZ3RoIiwibGF0IiwicGFyc2VGbG9hdCIsImxvbiIsImdldENhY2hlZE9yR2VvY29kZUxvY2F0aW9uIiwiY2FjaGVLZXkiLCJ0b0xvd2VyQ2FzZSIsImNvb3JkcyIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/geocoding.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/@firebase","vendor-chunks/@grpc","vendor-chunks/firebase","vendor-chunks/protobufjs","vendor-chunks/long","vendor-chunks/@protobufjs","vendor-chunks/lodash.camelcase","vendor-chunks/idb","vendor-chunks/csv-parse"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();