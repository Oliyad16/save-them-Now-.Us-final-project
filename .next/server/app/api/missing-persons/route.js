"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/missing-persons/route";
exports.ids = ["app/api/missing-persons/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var E_Download_savethemnow_Jesus_src_app_api_missing_persons_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/missing-persons/route.ts */ \"(rsc)/./src/app/api/missing-persons/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/missing-persons/route\",\n        pathname: \"/api/missing-persons\",\n        filename: \"route\",\n        bundlePath: \"app/api/missing-persons/route\"\n    },\n    resolvedPagePath: \"E:\\\\Download\\\\savethemnow.Jesus\\\\src\\\\app\\\\api\\\\missing-persons\\\\route.ts\",\n    nextConfigOutput,\n    userland: E_Download_savethemnow_Jesus_src_app_api_missing_persons_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/missing-persons/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtaXNzaW5nLXBlcnNvbnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm1pc3NpbmctcGVyc29ucyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm1pc3NpbmctcGVyc29ucyUyRnJvdXRlLnRzJmFwcERpcj1FJTNBJTVDRG93bmxvYWQlNUNzYXZldGhlbW5vdy5KZXN1cyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RSUzQSU1Q0Rvd25sb2FkJTVDc2F2ZXRoZW1ub3cuSmVzdXMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3lCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2F2ZXRoZW1ub3ctamVzdXMvPzIzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRTpcXFxcRG93bmxvYWRcXFxcc2F2ZXRoZW1ub3cuSmVzdXNcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcbWlzc2luZy1wZXJzb25zXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9taXNzaW5nLXBlcnNvbnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9taXNzaW5nLXBlcnNvbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL21pc3NpbmctcGVyc29ucy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkU6XFxcXERvd25sb2FkXFxcXHNhdmV0aGVtbm93Lkplc3VzXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG1pc3NpbmctcGVyc29uc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbWlzc2luZy1wZXJzb25zL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/missing-persons/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/missing-persons/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firestore */ \"(rsc)/./src/lib/firestore.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var csv_parse_sync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! csv-parse/sync */ \"(rsc)/./node_modules/csv-parse/lib/sync.js\");\n\n\n\n\n\nasync function getCSVData(searchParams) {\n    try {\n        const csvPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"missing-persons.csv\");\n        const csvContent = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(csvPath, \"utf-8\");\n        const records = (0,csv_parse_sync__WEBPACK_IMPORTED_MODULE_4__.parse)(csvContent, {\n            columns: true,\n            skip_empty_lines: true,\n            bom: true\n        });\n        // Convert CSV records to MissingPerson format\n        let missingPersons = records.map((row, index)=>{\n            const caseNumber = row[\"Case Number\"]?.trim().replace(/\"/g, \"\") || \"\";\n            const dlc = row[\"DLC\"]?.trim() || \"\";\n            const firstName = row[\"Legal First Name\"]?.trim() || \"\";\n            const lastName = row[\"Legal Last Name\"]?.trim() || \"\";\n            const city = row[\"City\"]?.trim() || \"\";\n            const state = row[\"State\"]?.trim() || \"\";\n            const county = row[\"County\"]?.trim() || \"\";\n            const ageText = row[\"Missing Age\"]?.trim() || \"\";\n            const sex = row[\"Biological Sex\"]?.trim() || \"\";\n            const ethnicity = row[\"Race / Ethnicity\"]?.trim() || \"\";\n            const digits = ageText.match(/\\d+/);\n            const age = digits ? parseInt(digits[0]) : 0;\n            const category = age < 18 ? \"Missing Children\" : \"Missing Adults\";\n            const location = [\n                city,\n                county,\n                state,\n                \"USA\"\n            ].filter(Boolean).join(\", \");\n            const fullName = [\n                firstName,\n                lastName\n            ].filter(Boolean).join(\" \");\n            return {\n                id: index + 1,\n                name: fullName || \"Unknown\",\n                date: dlc,\n                status: \"Active\",\n                category,\n                reportedMissing: dlc ? `Reported Missing ${dlc}` : \"\",\n                location,\n                latitude: 0,\n                longitude: 0,\n                age,\n                gender: sex,\n                ethnicity,\n                caseNumber,\n                description: `Case #${caseNumber} - ${ageText} ${sex} from ${city}, ${state}`,\n                city,\n                state,\n                county,\n                legalFirstName: firstName,\n                legalLastName: lastName,\n                biologicalSex: sex,\n                raceEthnicity: ethnicity,\n                missingAge: ageText,\n                dateMissing: dlc,\n                dateModified: dlc\n            };\n        });\n        // Apply filters\n        const category = searchParams.get(\"category\");\n        const status = searchParams.get(\"status\");\n        const state_filter = searchParams.get(\"state\");\n        const city_filter = searchParams.get(\"city\");\n        const search = searchParams.get(\"search\");\n        const limit = parseInt(searchParams.get(\"limit\") || \"100\");\n        const offset = parseInt(searchParams.get(\"offset\") || \"0\");\n        if (category) {\n            missingPersons = missingPersons.filter((person)=>person.category === category);\n        }\n        if (status) {\n            missingPersons = missingPersons.filter((person)=>person.status === status);\n        }\n        if (state_filter) {\n            missingPersons = missingPersons.filter((person)=>person.state === state_filter);\n        }\n        if (city_filter) {\n            missingPersons = missingPersons.filter((person)=>person.city === city_filter);\n        }\n        if (search) {\n            const searchLower = search.toLowerCase();\n            missingPersons = missingPersons.filter((person)=>person.name?.toLowerCase().includes(searchLower) || person.location?.toLowerCase().includes(searchLower) || person.caseNumber?.toLowerCase().includes(searchLower));\n        }\n        const total = missingPersons.length;\n        const paginatedData = missingPersons.slice(offset, offset + limit);\n        const hasMore = offset + limit < total;\n        return {\n            data: paginatedData,\n            meta: {\n                total: paginatedData.length,\n                totalAvailable: total,\n                limit,\n                offset,\n                hasMore,\n                source: \"csv\"\n            }\n        };\n    } catch (error) {\n        console.error(\"Error reading CSV:\", error);\n        throw error;\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        // Try Firestore first, fall back to CSV\n        try {\n            const options = {\n                category: searchParams.get(\"category\") || undefined,\n                status: searchParams.get(\"status\") || undefined,\n                state: searchParams.get(\"state\") || undefined,\n                city: searchParams.get(\"city\") || undefined,\n                searchTerm: searchParams.get(\"search\") || undefined,\n                limitCount: parseInt(searchParams.get(\"limit\") || \"100\")\n            };\n            const result = await _lib_firestore__WEBPACK_IMPORTED_MODULE_1__.FirestoreService.getMissingPersons(options);\n            // If we have data from Firestore, use it\n            if (result.data.length > 0) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    data: result.data,\n                    meta: {\n                        total: result.data.length,\n                        limit: options.limitCount,\n                        hasMore: result.hasMore,\n                        lastDoc: result.lastDoc,\n                        source: \"firestore\"\n                    }\n                });\n            }\n        } catch (firestoreError) {\n            console.log(\"Firestore unavailable, using CSV fallback:\", firestoreError instanceof Error ? firestoreError.message : \"Unknown error\");\n        }\n        // Use CSV as fallback (or primary if Firestore is empty)\n        const csvResult = await getCSVData(searchParams);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(csvResult);\n    } catch (error) {\n        console.error(\"Error fetching missing persons:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch missing persons data\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const id = await _lib_firestore__WEBPACK_IMPORTED_MODULE_1__.FirestoreService.addMissingPerson(body);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            id,\n            message: \"Missing person added successfully\"\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Error adding missing person:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to add missing person\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const body = await request.json();\n        const { id, ...updates } = body;\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing person ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        await _lib_firestore__WEBPACK_IMPORTED_MODULE_1__.FirestoreService.updateMissingPerson(id, updates);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Missing person updated successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error updating missing person:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to update missing person\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get(\"id\");\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing person ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        await _lib_firestore__WEBPACK_IMPORTED_MODULE_1__.FirestoreService.deleteMissingPerson(id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Missing person deleted successfully\"\n        });\n    } catch (error) {\n        console.error(\"Error deleting missing person:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to delete missing person\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/missing-persons/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/firebase/config.ts":
/*!************************************!*\
  !*** ./src/lib/firebase/config.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analytics: () => (/* binding */ analytics),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   storage: () => (/* binding */ storage)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(rsc)/./node_modules/firebase/app/dist/index.mjs\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(rsc)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/storage */ \"(rsc)/./node_modules/firebase/storage/dist/index.mjs\");\n/* harmony import */ var firebase_analytics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/analytics */ \"(rsc)/./node_modules/firebase/analytics/dist/index.mjs\");\n\n\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCexq5vJYj21qFB1kjx1pljBZ5SIWsRKCk\",\n    authDomain: \"save-them-now.firebaseapp.com\",\n    projectId: \"save-them-now\",\n    storageBucket: \"save-them-now.firebasestorage.app\",\n    messagingSenderId: \"1013206442264\",\n    appId: \"1:1013206442264:web:25228ed7ca951d8ef93e6d\",\n    measurementId: \"G-5DQPCRRC4R\"\n};\n// Initialize Firebase only if it hasn't been initialized yet\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length === 0 ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\n// Initialize Firebase services\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\nconst storage = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_3__.getStorage)(app);\n// Initialize Analytics (only in browser)\nconst analytics =  false ? 0 : null;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2ZpcmViYXNlL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDVjtBQUNNO0FBQ0k7QUFFakQsTUFBTU0saUJBQWlCO0lBQ3JCQyxRQUFRQyx5Q0FBd0M7SUFDaERHLFlBQVlILCtCQUE0QztJQUN4REssV0FBV0wsZUFBMkM7SUFDdERPLGVBQWVQLG1DQUErQztJQUM5RFMsbUJBQW1CVCxlQUFvRDtJQUN2RVcsT0FBT1gsNENBQXVDO0lBQzlDYSxlQUFlYixjQUErQztBQUNoRTtBQUVBLDZEQUE2RDtBQUM3RCxNQUFNZSxNQUFNdEIscURBQU9BLEdBQUd1QixNQUFNLEtBQUssSUFBSXhCLDJEQUFhQSxDQUFDTSxrQkFBa0JMLHFEQUFPQSxFQUFFLENBQUMsRUFBRTtBQUVqRiwrQkFBK0I7QUFDeEIsTUFBTXdCLEtBQUt2QixnRUFBWUEsQ0FBQ3FCLEtBQUk7QUFDNUIsTUFBTUcsT0FBT3ZCLHNEQUFPQSxDQUFDb0IsS0FBSTtBQUN6QixNQUFNSSxVQUFVdkIsNERBQVVBLENBQUNtQixLQUFJO0FBRXRDLHlDQUF5QztBQUNsQyxNQUFNSyxZQUFZLE1BQWtCLEdBQWN2QixDQUFpQmtCLEdBQUcsS0FBSTtBQUVqRixpRUFBZUEsR0FBR0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhdmV0aGVtbm93LWplc3VzLy4vc3JjL2xpYi9maXJlYmFzZS9jb25maWcudHM/NzdjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0aWFsaXplQXBwLCBnZXRBcHBzIH0gZnJvbSAnZmlyZWJhc2UvYXBwJ1xyXG5pbXBvcnQgeyBnZXRGaXJlc3RvcmUgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnXHJcbmltcG9ydCB7IGdldEF1dGggfSBmcm9tICdmaXJlYmFzZS9hdXRoJ1xyXG5pbXBvcnQgeyBnZXRTdG9yYWdlIH0gZnJvbSAnZmlyZWJhc2Uvc3RvcmFnZSdcclxuaW1wb3J0IHsgZ2V0QW5hbHl0aWNzIH0gZnJvbSAnZmlyZWJhc2UvYW5hbHl0aWNzJ1xyXG5cclxuY29uc3QgZmlyZWJhc2VDb25maWcgPSB7XHJcbiAgYXBpS2V5OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BUElfS0VZLFxyXG4gIGF1dGhEb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOLFxyXG4gIHByb2plY3RJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfUFJPSkVDVF9JRCxcclxuICBzdG9yYWdlQnVja2V0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCxcclxuICBtZXNzYWdpbmdTZW5kZXJJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCxcclxuICBhcHBJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBQX0lELFxyXG4gIG1lYXN1cmVtZW50SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FQVNVUkVNRU5UX0lEXHJcbn1cclxuXHJcbi8vIEluaXRpYWxpemUgRmlyZWJhc2Ugb25seSBpZiBpdCBoYXNuJ3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcclxuY29uc3QgYXBwID0gZ2V0QXBwcygpLmxlbmd0aCA9PT0gMCA/IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpIDogZ2V0QXBwcygpWzBdXHJcblxyXG4vLyBJbml0aWFsaXplIEZpcmViYXNlIHNlcnZpY2VzXHJcbmV4cG9ydCBjb25zdCBkYiA9IGdldEZpcmVzdG9yZShhcHApXHJcbmV4cG9ydCBjb25zdCBhdXRoID0gZ2V0QXV0aChhcHApXHJcbmV4cG9ydCBjb25zdCBzdG9yYWdlID0gZ2V0U3RvcmFnZShhcHApXHJcblxyXG4vLyBJbml0aWFsaXplIEFuYWx5dGljcyAob25seSBpbiBicm93c2VyKVxyXG5leHBvcnQgY29uc3QgYW5hbHl0aWNzID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyBnZXRBbmFseXRpY3MoYXBwKSA6IG51bGxcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFwcCJdLCJuYW1lcyI6WyJpbml0aWFsaXplQXBwIiwiZ2V0QXBwcyIsImdldEZpcmVzdG9yZSIsImdldEF1dGgiLCJnZXRTdG9yYWdlIiwiZ2V0QW5hbHl0aWNzIiwiZmlyZWJhc2VDb25maWciLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBJX0tFWSIsImF1dGhEb21haW4iLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BVVRIX0RPTUFJTiIsInByb2plY3RJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQiLCJzdG9yYWdlQnVja2V0IiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FU1NBR0lOR19TRU5ERVJfSUQiLCJhcHBJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCIsIm1lYXN1cmVtZW50SWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRUFTVVJFTUVOVF9JRCIsImFwcCIsImxlbmd0aCIsImRiIiwiYXV0aCIsInN0b3JhZ2UiLCJhbmFseXRpY3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/firebase/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/firestore.ts":
/*!******************************!*\
  !*** ./src/lib/firestore.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FirestoreService: () => (/* binding */ FirestoreService)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(rsc)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var _firebase_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase/config */ \"(rsc)/./src/lib/firebase/config.ts\");\n\n\nclass FirestoreService {\n    static{\n        this.COLLECTION_NAME = \"missing_persons\";\n    }\n    /**\n   * Get missing persons with optional filtering and pagination\n   */ static async getMissingPersons(options = {}) {\n        try {\n            const constraints = [];\n            // Add filters\n            if (options.category) {\n                constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"category\", \"==\", options.category));\n            }\n            if (options.status) {\n                constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"status\", \"==\", options.status));\n            }\n            if (options.state) {\n                constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"state\", \"==\", options.state));\n            }\n            if (options.city) {\n                constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"city\", \"==\", options.city));\n            }\n            // Add ordering (required for pagination)\n            constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n            // Add pagination\n            if (options.lastDoc) {\n                constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.startAfter)(options.lastDoc));\n            }\n            // Add limit (default 100, get one extra to check if there are more)\n            const limitCount = options.limitCount || 100;\n            constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(limitCount + 1));\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME), ...constraints);\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const docs = querySnapshot.docs;\n            const hasMore = docs.length > limitCount;\n            // Remove the extra document if we have more than the limit\n            if (hasMore) {\n                docs.pop();\n            }\n            const lastDoc = docs.length > 0 ? docs[docs.length - 1] : null;\n            let missingPersons = docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            // Apply search filter if provided (client-side for now)\n            if (options.searchTerm) {\n                const searchLower = options.searchTerm.toLowerCase();\n                missingPersons = missingPersons.filter((person)=>person.name?.toLowerCase().includes(searchLower) || person.location?.toLowerCase().includes(searchLower) || person.city?.toLowerCase().includes(searchLower) || person.caseNumber?.toLowerCase().includes(searchLower));\n            }\n            return {\n                data: missingPersons,\n                hasMore,\n                lastDoc\n            };\n        } catch (error) {\n            console.error(\"Error getting missing persons:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get a specific missing person by ID\n   */ static async getMissingPerson(id) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME, id);\n            const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n            if (docSnap.exists()) {\n                return {\n                    id: docSnap.id,\n                    ...docSnap.data()\n                };\n            } else {\n                return null;\n            }\n        } catch (error) {\n            console.error(\"Error getting missing person:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Add a new missing person\n   */ static async addMissingPerson(person) {\n        try {\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME), {\n                ...person,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            });\n            return docRef.id;\n        } catch (error) {\n            console.error(\"Error adding missing person:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Update a missing person\n   */ static async updateMissingPerson(id, updates) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME, id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(docRef, {\n                ...updates,\n                updatedAt: new Date()\n            });\n        } catch (error) {\n            console.error(\"Error updating missing person:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Delete a missing person\n   */ static async deleteMissingPerson(id) {\n        try {\n            const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME, id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(docRef);\n        } catch (error) {\n            console.error(\"Error deleting missing person:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get statistics about missing persons\n   */ static async getStatistics() {\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME));\n            const stats = {\n                total: 0,\n                categories: {},\n                statuses: {},\n                states: {}\n            };\n            querySnapshot.forEach((doc)=>{\n                const data = doc.data();\n                stats.total++;\n                // Count categories\n                const category = data.category || \"Unknown\";\n                stats.categories[category] = (stats.categories[category] || 0) + 1;\n                // Count statuses\n                const status = data.status || \"Unknown\";\n                stats.statuses[status] = (stats.statuses[status] || 0) + 1;\n                // Count states\n                const state = data.state || \"Unknown\";\n                stats.states[state] = (stats.states[state] || 0) + 1;\n            });\n            return stats;\n        } catch (error) {\n            console.error(\"Error getting statistics:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Search missing persons by name or location\n   */ static async searchMissingPersons(searchTerm, limitCount = 50) {\n        try {\n            // For better search, we'll get a larger dataset and filter client-side\n            // In production, consider using Algolia or implementing server-side search\n            const result = await this.getMissingPersons({\n                limitCount: limitCount * 3,\n                searchTerm\n            });\n            return result.data.slice(0, limitCount);\n        } catch (error) {\n            console.error(\"Error searching missing persons:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get missing persons by category with caching\n   */ static async getMissingPersonsByCategory(category, limitCount = 100) {\n        try {\n            const result = await this.getMissingPersons({\n                category,\n                limitCount\n            });\n            return result.data;\n        } catch (error) {\n            console.error(\"Error getting missing persons by category:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Get recent missing persons (last 30 days)\n   */ static async getRecentMissingPersons(limitCount = 20) {\n        try {\n            const thirtyDaysAgo = new Date();\n            thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"createdAt\", \">=\", thirtyDaysAgo), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(limitCount));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            return querySnapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n        } catch (error) {\n            console.error(\"Error getting recent missing persons:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Batch add multiple missing persons (for migration)\n   */ static async batchAddMissingPersons(persons) {\n        try {\n            const batch = [];\n            for (const person of persons){\n                const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME));\n                batch.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.db, this.COLLECTION_NAME), {\n                    ...person,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                }));\n            }\n            await Promise.all(batch);\n        } catch (error) {\n            console.error(\"Error batch adding missing persons:\", error);\n            throw error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/firestore.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@grpc","vendor-chunks/@opentelemetry","vendor-chunks/next","vendor-chunks/protobufjs","vendor-chunks/@firebase","vendor-chunks/@protobufjs","vendor-chunks/csv-parse","vendor-chunks/firebase","vendor-chunks/idb","vendor-chunks/long","vendor-chunks/lodash.camelcase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmissing-persons%2Froute&page=%2Fapi%2Fmissing-persons%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmissing-persons%2Froute.ts&appDir=E%3A%5CDownload%5Csavethemnow.Jesus%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDownload%5Csavethemnow.Jesus&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();