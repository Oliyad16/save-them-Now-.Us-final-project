"use strict";(()=>{var e={};e.id=241,e.ids=[241],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61282:e=>{e.exports=require("child_process")},79736:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>y,staticGenerationAsyncStorage:()=>m});var r={};s.r(r),s.d(r,{GET:()=>p,POST:()=>u});var o=s(49303),n=s(88716),i=s(60670),a=s(87070),c=s(61282);async function u(e){try{let t=await e.json(),s=["data_pipeline/utils/incremental_updater.py","--sync"];t.sources&&t.sources.length>0&&s.push("--sources",...t.sources);let r=(0,c.spawn)("python",s,{cwd:process.cwd(),detached:!0,stdio:"pipe"}),o="",n="";r.stdout.on("data",e=>{o+=e.toString()}),r.stderr.on("data",e=>{n+=e.toString()});let i=await new Promise(e=>{let t=setTimeout(()=>{r.kill(),e({success:!1,error:"Sync operation timed out",timeout:!0})},3e5);r.on("close",s=>{clearTimeout(t),e({success:0===s,exit_code:s,output:o,error:n||null})})});if(!i.success)return a.NextResponse.json({success:!1,error:i.error||"Sync operation failed",exit_code:i.exit_code,raw_output:i.output,timeout:i.timeout||!1},{status:500});{let e=null;try{let t=i.output.match(/\{[\s\S]*\}/);t&&(e=JSON.parse(t[0]))}catch(e){}return a.NextResponse.json({success:!0,message:"Incremental sync completed successfully",sync_stats:e,raw_output:i.output,execution_time:new Date().toISOString()})}}catch(e){return console.error("Error running incremental sync:",e),a.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function p(){try{let e=(0,c.spawn)("python",["data_pipeline/utils/incremental_updater.py","--status"],{cwd:process.cwd(),stdio:"pipe"}),t="",s="";e.stdout.on("data",e=>{t+=e.toString()}),e.stderr.on("data",e=>{s+=e.toString()});let r=await new Promise(r=>{let o=setTimeout(()=>{e.kill(),r({success:!1,error:"Status check timed out"})},3e4);e.on("close",e=>{clearTimeout(o),r({success:0===e,output:t,error:s||null})})});if(!r.success)return a.NextResponse.json({error:"Failed to get sync status",details:r.error},{status:500});try{let e=JSON.parse(r.output);return a.NextResponse.json({timestamp:new Date().toISOString(),incremental_sync:e,capabilities:{supported_sources:["namus","florida_fdle"],operations:["insert","update","skip","delete"],features:["Delta synchronization","Priority-based processing","Confidence scoring","Batch processing","Change detection"]},recommendations:function(e){let t=[];if(e.pending_operations>100&&t.push({type:"performance",priority:"medium",message:`${e.pending_operations} operations pending. Consider processing queue.`,action:"process_queue"}),e.source_sync_status)for(let s of e.source_sync_status){s.error_count>5&&t.push({type:"reliability",priority:"high",message:`Source ${s.source_name} has ${s.error_count} errors. Check configuration.`,action:"check_source_config"});let e=new Date(s.last_sync_time),r=(Date.now()-e.getTime())/36e5;r>12&&t.push({type:"freshness",priority:"medium",message:`Source ${s.source_name} hasn't synced in ${r.toFixed(1)} hours.`,action:"trigger_sync"})}return 0===Object.values(e.recent_operations_24h||{}).reduce((e,t)=>e+t,0)&&t.push({type:"activity",priority:"low",message:"No sync operations in the last 24 hours. Consider running sync.",action:"run_sync"}),t}(e)})}catch(e){return a.NextResponse.json({error:"Failed to parse status output",raw_output:r.output},{status:500})}}catch(e){return console.error("Error getting sync status:",e),a.NextResponse.json({error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/incremental-sync/route",pathname:"/api/incremental-sync",filename:"route",bundlePath:"app/api/incremental-sync/route"},resolvedPagePath:"E:\\Download\\savethemnow.Jesus\\src\\app\\api\\incremental-sync\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:y}=l,g="/api/incremental-sync/route";function h(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[276,972],()=>s(79736));module.exports=r})();