"use strict";(()=>{var e={};e.id=189,e.ids=[189],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61282:e=>{e.exports=require("child_process")},80963:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>_,staticGenerationAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{GET:()=>l,PATCH:()=>d,POST:()=>u});var o=r(49303),n=r(88716),i=r(60670),a=r(87070),c=r(61282);async function u(e){try{let t=await e.json(),r=["data_pipeline/utils/monitoring_alerting.py"];switch(t.action){case"start":return r.push("--start"),t.interval&&r.push("--interval",t.interval.toString()),(0,c.spawn)("python",r,{cwd:process.cwd(),detached:!0,stdio:"ignore"}).unref(),a.NextResponse.json({success:!0,message:"Background monitoring started",monitoring_interval:t.interval||300,started_at:new Date().toISOString()});case"stop":return a.NextResponse.json({success:!0,message:"Stop monitoring request received",note:"Background processes may continue until next check"});case"test_alert":if(!t.severity)return a.NextResponse.json({error:"severity is required for test_alert action"},{status:400});r.push("--test-alert",t.severity);break;case"record_metric":if(!t.metric_data)return a.NextResponse.json({error:"metric_data is required for record_metric action"},{status:400});return a.NextResponse.json({success:!0,message:"Metric recording functionality not yet implemented",metric_data:t.metric_data});default:return a.NextResponse.json({error:"Invalid action",valid_actions:["start","stop","test_alert","record_metric"]},{status:400})}if("test_alert"===t.action){let e=(0,c.spawn)("python",r,{cwd:process.cwd(),stdio:"pipe"}),s="",o="";e.stdout.on("data",e=>{s+=e.toString()}),e.stderr.on("data",e=>{o+=e.toString()});let n=await new Promise(t=>{let r=setTimeout(()=>{e.kill(),t({success:!1,error:"Test alert operation timed out"})},3e4);e.on("close",e=>{clearTimeout(r),t({success:0===e,exit_code:e,output:s,error:o||null})})});if(n.success)return a.NextResponse.json({success:!0,action:t.action,severity:t.severity,message:"Test alert created successfully",output:n.output});return a.NextResponse.json({success:!1,action:t.action,error:n.error||"Test alert creation failed",exit_code:n.exit_code},{status:500})}}catch(e){return console.error("Error in monitoring alerts:",e),a.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function l(e){try{let{searchParams:r}=new URL(e.url),s="true"===r.get("detailed"),o=(0,c.spawn)("python",["data_pipeline/utils/monitoring_alerting.py","--status"],{cwd:process.cwd(),stdio:"pipe"}),n="",i="";o.stdout.on("data",e=>{n+=e.toString()}),o.stderr.on("data",e=>{i+=e.toString()});let u=await new Promise(e=>{let t=setTimeout(()=>{o.kill(),e({success:!1,error:"Monitoring status check timed out"})},3e4);o.on("close",r=>{clearTimeout(t),e({success:0===r,output:n,error:i||null})})});if(!u.success)return a.NextResponse.json({error:"Failed to get monitoring status",details:u.error},{status:500});try{var t;let e=JSON.parse(u.output),r=(t=e.active_alerts||{},{total_active:Object.values(t).reduce((e,t)=>e+t,0),by_severity:t,critical_count:t.critical||0,high_count:t.high||0,medium_count:t.medium||0,requires_immediate_attention:(t.critical||0)+(t.high||0)>0}),o=e.system_health?.overall_health_score||100,n=function(e,t){let r=t.critical||0,s=t.high||0;return r>0?"critical":s>0||e<70?"degraded":e<90?"warning":"healthy"}(o,e.active_alerts||{}),i={timestamp:new Date().toISOString(),monitoring_status:{active:e.monitoring_active,system_status:n,health_score:o,alert_summary:r},system_health:e.system_health,capabilities:{alert_types:["data_staleness","sync_failure","high_error_rate","performance_degradation","system_resource","urgent_case_detected","source_unavailable","schedule_deviation"],severity_levels:["critical","high","medium","low","info"],notification_channels:["email","webhook","console"]}};return s&&(i.recent_alerts=e.recent_alerts||[],i.notification_statistics=e.notification_stats||{},i.monitoring_config=e.monitoring_config||{}),a.NextResponse.json(i)}catch(e){return a.NextResponse.json({error:"Failed to parse monitoring status",raw_output:u.output},{status:500})}}catch(e){return console.error("Error getting monitoring status:",e),a.NextResponse.json({error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function d(e){try{let{alert_id:t,action:r}=await e.json();if(!t||!r)return a.NextResponse.json({error:"alert_id and action are required"},{status:400});let s=["acknowledge","resolve","suppress"];if(!s.includes(r))return a.NextResponse.json({error:"Invalid action",valid_actions:s},{status:400});return a.NextResponse.json({success:!0,message:`Alert ${r} functionality not yet implemented`,alert_id:t,action:r,timestamp:new Date().toISOString()})}catch(e){return console.error("Error updating alert:",e),a.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/monitoring-alerts/route",pathname:"/api/monitoring-alerts",filename:"route",bundlePath:"app/api/monitoring-alerts/route"},resolvedPagePath:"E:\\Download\\savethemnow.Jesus\\src\\app\\api\\monitoring-alerts\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:_}=p,h="/api/monitoring-alerts/route";function v(){return(0,i.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,972],()=>r(80963));module.exports=s})();