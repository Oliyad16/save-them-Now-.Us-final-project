rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Missing persons data - public read access, restricted write
    match /missing_persons/{personId} {
      // Allow anyone to read missing persons data (public awareness)
      allow read: if true;

      // Only authenticated users can write/update/delete
      allow write: if request.auth != null;
      
      // Additional validation for writes
      allow create: if request.auth != null 
        && isValidMissingPerson(request.resource.data);
      
      allow update: if request.auth != null 
        && isValidMissingPerson(request.resource.data);
    }

    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId;
    }

    // User profiles - linked to auth
    match /user_profiles/{profileId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.user_id;
    }

    // Statistics and analytics - public read, admin write
    match /statistics/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Reports or tips from users
    match /reports/{reportId} {
      allow read: if request.auth != null;
      allow create: if true; // Anyone can submit a tip/report
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.submittedBy;
    }

    // User sessions and auth data
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }

    // Subscriptions and payments
    match /subscriptions/{subscriptionId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }

    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null 
        && isAdmin(request.auth.uid);
    }

    // Analytics and monitoring
    match /analytics/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // Cache collections
    match /cache/{document=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Default deny all for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }

  // Helper functions
  function isValidMissingPerson(data) {
    return data.keys().hasAll(['name', 'status', 'category']) &&
           data.name is string &&
           data.status is string &&
           data.category is string &&
           data.category in ['Missing Adults', 'Missing Children', 'Missing Veterans'];
  }

  function isAdmin(uid) {
    // Define admin UIDs here or check against an admin collection
    // For now, return false - implement admin check as needed
    return false;
  }
}